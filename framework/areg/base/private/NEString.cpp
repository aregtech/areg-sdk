/************************************************************************
 * This file is part of the AREG SDK core engine.
 * AREG SDK is dual-licensed under Free open source (Apache version 2.0
 * License) and Commercial (with various pricing models) licenses, depending
 * on the nature of the project (commercial, research, academic or free).
 * You should have received a copy of the AREG SDK license description in LICENSE.txt.
 * If not, please contact to info[at]aregtech.com
 *
 * \copyright   (c) 2017-2023 Aregtech UG. All rights reserved.
 * \file        areg/base/private/NEString.cpp
 * \ingroup     AREG SDK, Asynchronous Event Generator Software Development Kit 
 * \author      Artak Avetyan
 * \brief       AREG Platform, Debugging utilities
 *
 ************************************************************************/

/************************************************************************
 * Include files.
 ************************************************************************/

#include "areg/base/NEString.hpp"

/************************************************************************/
// Defines
// No special meaning, only short meanings
/************************************************************************/
#define DUMMY   static_cast<uint16_t>(NEString::eCharDefs::CD_Undefined                                         )   /* Dummy */
#define EOFS    static_cast<uint16_t>(NEString::eCharDefs::CD_EOfS                                              )   /* End of string, null-termination */
#define EOFL    static_cast<uint16_t>(NEString::eCharDefs::CD_EndOfLine  | NEString::eCharDefs::CD_WhiteSpace   )   /* End of line, regardless only '\n' is defining, but using to make binary buffer readable */
#define DEOL    static_cast<uint16_t>(NEString::eCharDefs::CD_CarReturn  | NEString::eCharDefs::CD_EndOfLine    )   /* DOS End of Line, used only for carriage return */
#define SPACE   static_cast<uint16_t>(NEString::eCharDefs::CD_WhiteSpace | NEString::eCharDefs::CD_Delimiter    )   /* White space, used for trimming, as we as syntax separator */
#define CTRL    static_cast<uint16_t>(NEString::eCharDefs::CD_Control    | NEString::eCharDefs::CD_WhiteSpace   )   /* Control key value, also used to specify white space in conversion of binary buffer to readable */
#define PRINT   static_cast<uint16_t>(NEString::eCharDefs::CD_Printable                                         )   /* All printable characters, symbols and numbers, which may change text, including tab and whitespace */
#define NUMBER  static_cast<uint16_t>(NEString::eCharDefs::CD_Number     | NEString::eCharDefs::CD_Printable    )   /* All numbers */
#define SYMBOL  static_cast<uint16_t>(NEString::eCharDefs::CD_Symbol     | NEString::eCharDefs::CD_Printable    )   /* All symbols */
#define LETTER  static_cast<uint16_t>(NEString::eCharDefs::CD_Letter     | NEString::eCharDefs::CD_Printable    )   /* All letters */

// ISO 8859-1
static constexpr unsigned short  ASCII_ISO8859_1_Table[]  =
{
    /*   0 -   0 */   EOFS  | EOFL                                                                                  //   '\0', end of string
    /*   1 -   4 */ , EOFL  | CTRL          , EOFL  | CTRL          , EOFL  | CTRL          , EOFL  | CTRL          //    1 == SOH  ,   2 == STX    ,   3 == ETX    ,   4 == EOT
    /*   5 -   8 */ , EOFL  | CTRL          , EOFL  | CTRL          , EOFL  | CTRL          , EOFL  | CTRL          //    5 == ENQ  ,   6 == ACK    ,   7 == BEL    ,   8 == '\b'
    /*   9 -  12 */ , PRINT | CTRL | SPACE  , EOFL  | CTRL | PRINT  , PRINT | CTRL          , EOFL  | CTRL          //    9 == '\t' ,  10 == '\n'   ,  11 == '\v'   ,  12 == '\f'
    /*  13 -  16 */ , DEOL  | CTRL | PRINT  , EOFL  | CTRL          , EOFL  | CTRL          , EOFL  | CTRL          //   13 == '\r' ,  14 == SO     ,  15 == SI     ,  16 == DLE
    /*  17 -  20 */ , EOFL  | CTRL          , EOFL  | CTRL          , EOFL  | CTRL          , EOFL  | CTRL          //   17 == DC1  ,  18 == DC2    ,  19 == DC3    ,  20 == DC4
    /*  21 -  24 */ , EOFL  | CTRL          , EOFL  | CTRL          , EOFL  | CTRL          , EOFL  | CTRL          //   21 == NAK  ,  22 == SYN    ,  23 == ETB    ,  24 == CAN
    /*  25 -  28 */ , EOFL  | CTRL          , EOFL  | CTRL          , EOFL  | CTRL          , EOFL  | CTRL          //   25 == EM   ,  26 == SUB    ,  27 == ESC    ,  28 == FS
    /*  29 -  32 */ , EOFL  | CTRL          , EOFL  | CTRL          , EOFL  | CTRL          , PRINT | SPACE         //   29 == GS   ,  30 == RS     ,  31 == US     ,  32 == ' '
    /*  33 -  36 */ , SYMBOL                , SYMBOL                , SYMBOL                , SYMBOL                //   33 == '!'  ,  34 == '\"'   ,  35 == '#'    ,  36 == '$'
    /*  37 -  40 */ , SYMBOL                , SYMBOL                , SYMBOL                , SYMBOL                //   37 == '%'  ,  38 == '&'    ,  39 == '\''   ,  40 == '('
    /*  41 -  44 */ , SYMBOL                , SYMBOL                , SYMBOL                , SYMBOL                //   41 == ')'  ,  42 == '*'    ,  43 == '+'    ,  44 == ','
    /*  45 -  48 */ , SYMBOL                , SYMBOL                , SYMBOL                , NUMBER                //   45 == '-'  ,  46 == '.'    ,  47 == '/'    ,  48 == '0'
    /*  49 -  52 */ , NUMBER                , NUMBER                , NUMBER                , NUMBER                //   49 == '1'  ,  50 == '2'    ,  51 == '3'    ,  52 == '4'
    /*  53 -  56 */ , NUMBER                , NUMBER                , NUMBER                , NUMBER                //   53 == '5'  ,  54 == '6'    ,  55 == '7'    ,  56 == '8'
    /*  57 -  60 */ , NUMBER                , SYMBOL                , SYMBOL                , SYMBOL                //   57 == '9'  ,  58 == ':'    ,  59 == ';'    ,  60 == '<'
    /*  61 -  64 */ , SYMBOL                , SYMBOL                , SYMBOL                , SYMBOL                //   61 == '='  ,  62 == '>'    ,  63 == '?'    ,  64 == '@'
    /*  65 -  68 */ , LETTER                , LETTER                , LETTER                , LETTER                //   65 == 'A'  ,  66 == 'B'    ,  67 == 'C'    ,  68 == 'D'
    /*  69 -  72 */ , LETTER                , LETTER                , LETTER                , LETTER                //   69 == 'E'  ,  70 == 'F'    ,  71 == 'G'    ,  72 == 'H'
    /*  73 -  76 */ , LETTER                , LETTER                , LETTER                , LETTER                //   73 == 'I'  ,  74 == 'J'    ,  74 == 'K'    ,  76 == 'L'
    /*  77 -  80 */ , LETTER                , LETTER                , LETTER                , LETTER                //   77 == 'M'  ,  78 == 'N'    ,  79 == 'O'    ,  80 == 'P'
    /*  81 -  84 */ , LETTER                , LETTER                , LETTER                , LETTER                //   81 == 'Q'  ,  82 == 'R'    ,  83 == 'S'    ,  84 == 'T'
    /*  85 -  88 */ , LETTER                , LETTER                , LETTER                , LETTER                //   85 == 'U'  ,  86 == 'V'    ,  87 == 'W'    ,  88 == 'X'
    /*  89 -  92 */ , LETTER                , LETTER                , SYMBOL                , SYMBOL                //   89 == 'Y'  ,  90 == 'Z'    ,  91 == '['    ,  92 == '\\'
    /*  93 -  96 */ , SYMBOL                , SYMBOL                , SYMBOL                , SYMBOL                //   93 == ']'  ,  94 == '^'    ,  95 == '_'    ,  96 == '`'
    /*  97 - 100 */ , LETTER                , LETTER                , LETTER                , LETTER                //   97 == 'a'  ,  98 == 'b'    ,  99 == 'c'    , 100 == 'd'
    /* 101 - 104 */ , LETTER                , LETTER                , LETTER                , LETTER                //  101 == 'e'  , 102 == 'f'    , 103 == 'g'    , 104 == 'h'
    /* 105 - 108 */ , LETTER                , LETTER                , LETTER                , LETTER                //  105 == 'i'  , 106 == 'j'    , 107 == 'k'    , 108 == 'l'
    /* 109 - 112 */ , LETTER                , LETTER                , LETTER                , LETTER                //  109 == 'm'  , 110 == 'n'    , 111 == 'o'    , 112 == 'p'
    /* 113 - 116 */ , LETTER                , LETTER                , LETTER                , LETTER                //  113 == 'q'  , 114 == 'r'    , 115 == 's'    , 116 == 't'
    /* 117 - 120 */ , LETTER                , LETTER                , LETTER                , LETTER                //  117 == 'u'  , 118 == 'v'    , 119 == 'w'    , 120 == 'x'
    /* 121 - 124 */ , LETTER                , LETTER                , SYMBOL                , SYMBOL                //  121 == 'y'  , 122 == 'z'    , 123 == '{'    , 124 == '|'
    /* 125 - 128 */ , SYMBOL                , SYMBOL                , CTRL  | EOFL          , SYMBOL                //  125 == '}'  , 126 == '~'    , 127 == DEL    , 128 == '�' 
    /* 129 - 132 */ , EOFL                  , SYMBOL                , SYMBOL                , SYMBOL                //  129         , 130 == '�'    , 131 == '�'    , 132 == '�'
    /* 133 - 136 */ , SYMBOL                , SYMBOL                , SYMBOL                , SYMBOL                //  133 == '�'  , 134 == '�'    , 135 == '�'    , 136 == '�'
    /* 137 - 140 */ , SYMBOL                , LETTER                , SYMBOL                , LETTER                //  137 == '�'  , 138 == '�'    , 139 == '�'    , 140 == '�'
    /* 141 - 144 */ , EOFL                  , LETTER                , EOFL                  , EOFL                  //  141         , 142 == '�'    , 143           , 144
    /* 145 - 148 */ , SYMBOL                , SYMBOL                , SYMBOL                , SYMBOL                //  145 == '�'  , 146 == '�'    , 147 == '�'    , 148 == '�'
    /* 149 - 152 */ , SYMBOL                , SYMBOL                , SYMBOL                , SYMBOL                //  149 == '�'  , 150 == '�'    , 151 == '�'    , 152 == '�"
    /* 153 - 156 */ , SYMBOL                , LETTER                , SYMBOL                , LETTER                //  153 == '�'  , 154 == '�'    , 155 == '�'    , 156 == '�'
    /* 157 - 160 */ , EOFL                  , LETTER                , LETTER                , SYMBOL                //  157         , 158 == '�'    , 159 == '�'    , 160 == '�'
    /* 161 - 164 */ , SYMBOL                , SYMBOL                , SYMBOL                , SYMBOL                //  161 == '�'  , 162 == '�'    , 163 == '�'    , 164 == '�'
    /* 165 - 168 */ , SYMBOL                , SYMBOL                , SYMBOL                , SYMBOL                //  165 == '�'  , 166 == '�'    , 167 == '�'    , 168 == '�'
    /* 169 - 172 */ , SYMBOL                , SYMBOL                , SYMBOL                , SYMBOL                //  169 == '�'  , 170 == '�'    , 171 == '�'    , 172 == '�'
    /* 173 - 176 */ , CTRL                  , SYMBOL                , SYMBOL                , SYMBOL                //  173         , 174 == '�'    , 175 == '�'    , 176 == '�'
    /* 177 - 180 */ , SYMBOL                , SYMBOL                , SYMBOL                , SYMBOL                //  177 == '�'  , 178 == '�'    , 179 == '�'    , 180 == '�'
    /* 181 - 184 */ , SYMBOL                , SYMBOL                , SYMBOL                , SYMBOL                //  181 == '�'  , 182 == '�'    , 183 == '�'    , 184 == '�'
    /* 185 - 188 */ , SYMBOL                , SYMBOL                , SYMBOL                , SYMBOL                //  185 == '�'  , 186 == '�'    , 187 == '�'    , 188 == '�'
    /* 189 - 192 */ , SYMBOL                , SYMBOL                , SYMBOL                , LETTER                //  189 == '�'  , 190 == '�'    , 191 == '�'    , 192 == '�'
    /* 193 - 196 */ , LETTER                , LETTER                , LETTER                , LETTER                //  193 == '�'  , 194 == '�'    , 195 == '�'    , 196 == '�'
    /* 197 - 200 */ , LETTER                , LETTER                , LETTER                , LETTER                //  197 == '�'  , 198 == '�'    , 199 == '�'    , 200 == '�'
    /* 201 - 204 */ , LETTER                , LETTER                , LETTER                , LETTER                //  201 == '�'  , 202 == '�'    , 203 == '�'    , 204 == '�'
    /* 205 - 208 */ , LETTER                , LETTER                , LETTER                , LETTER                //  205 == '�'  , 206 == '�'    , 207 == '�'    , 208 == '�'
    /* 209 - 212 */ , LETTER                , LETTER                , LETTER                , LETTER                //  209 == '�'  , 210 == '�'    , 211 == '�'    , 212 == '�'
    /* 213 - 216 */ , LETTER                , LETTER                , SYMBOL                , LETTER                //  213 == '�'  , 214 == '�'    , 215 == '�'    , 216 == '�'
    /* 217 - 220 */ , LETTER                , LETTER                , LETTER                , LETTER                //  217 == '�'  , 218 == '�'    , 219 == '�'    , 220 == '�'
    /* 221 - 224 */ , LETTER                , LETTER                , LETTER                , LETTER                //  221 == '�'  , 222 == '�'    , 223 == '�'    , 224 == '�'
    /* 225 - 228 */ , LETTER                , LETTER                , LETTER                , LETTER                //  225 == '�'  , 226 == '�'    , 227 == '�'    , 228 == '�'
    /* 229 - 232 */ , LETTER                , LETTER                , LETTER                , LETTER                //  229 == '�'  , 230 == '�'    , 231 == '�'    , 232 == '�'
    /* 233 - 236 */ , LETTER                , LETTER                , LETTER                , LETTER                //  233 == '�'  , 234 == '�'    , 235 == '�'    , 236 == '�'
    /* 237 - 240 */ , LETTER                , LETTER                , LETTER                , LETTER                //  237 == '�'  , 238 == '�'    , 239 == '�'    , 240 == '�'
    /* 241 - 244 */ , LETTER                , LETTER                , LETTER                , LETTER                //  241 == '�'  , 242 == '�'    , 243 == '�'    , 244 == '�'
    /* 245 - 248 */ , LETTER                , LETTER                , SYMBOL                , LETTER                //  245 == '�'  , 246 == '�'    , 247 == '�'    , 248 == '�'
    /* 249 - 252 */ , LETTER                , LETTER                , LETTER                , LETTER                //  249 == '�'  , 250 == '�'    , 251 == '�'    , 252 == '�'
    /* 253 - 255 */ , LETTER                , LETTER                , LETTER                                        //  253 == '�'  , 254 == '�'    , 255 == '�'
};

// ISO 8859-1
static constexpr unsigned char  ASCII_ISO8859_1_Table_lower[]  =
{
    /*   0 -   0 */     0                                                                                           //   '\0', end of string
    /*   1 -   4 */ ,   1                   ,   2                   ,   3                   ,   4                   //    1 == SOH  ,   2 == STX    ,   3 == ETX    ,   4 == EOT
    /*   5 -   8 */ ,   5                   ,   6                   ,   7                   ,   8                   //    5 == ENQ  ,   6 == ACK    ,   7 == BEL    ,   8 == '\b'
    /*   9 -  12 */ ,   9                   ,  10                   ,  11                   ,  12                   //    9 == '\t' ,  10 == '\n'   ,  11 == '\v'   ,  12 == '\f'
    /*  13 -  16 */ ,  13                   ,  14                   ,  15                   ,  16                   //   13 == '\r' ,  14 == SO     ,  15 == SI     ,  16 == DLE
    /*  17 -  20 */ ,  17                   ,  18                   ,  19                   ,  20                   //   17 == DC1  ,  18 == DC2    ,  19 == DC3    ,  20 == DC4
    /*  21 -  24 */ ,  21                   ,  22                   ,  23                   ,  24                   //   21 == NAK  ,  22 == SYN    ,  23 == ETB    ,  24 == CAN
    /*  25 -  28 */ ,  25                   ,  26                   ,  27                   ,  28                   //   25 == EM   ,  26 == SUB    ,  27 == ESC    ,  28 == FS
    /*  29 -  32 */ ,  29                   ,  30                   ,  31                   ,  32                   //   29 == GS   ,  30 == RS     ,  31 == US     ,  32 == ' '
    /*  33 -  36 */ ,  33                   ,  34                   ,  35                   ,  36                   //   33 == '!'  ,  34 == '\"'   ,  35 == '#'    ,  36 == '$'
    /*  37 -  40 */ ,  37                   ,  38                   ,  39                   ,  40                   //   37 == '%'  ,  38 == '&'    ,  39 == '\''   ,  40 == '('
    /*  41 -  44 */ ,  41                   ,  42                   ,  43                   ,  44                   //   41 == ')'  ,  42 == '*'    ,  43 == '+'    ,  44 == ','
    /*  45 -  48 */ ,  45                   ,  46                   ,  47                   ,  48                   //   45 == '-'  ,  46 == '.'    ,  47 == '/'    ,  48 == '0'
    /*  49 -  52 */ ,  49                   ,  50                   ,  51                   ,  52                   //   49 == '1'  ,  50 == '2'    ,  51 == '3'    ,  52 == '4'
    /*  53 -  56 */ ,  53                   ,  54                   ,  55                   ,  56                   //   53 == '5'  ,  54 == '6'    ,  55 == '7'    ,  56 == '8'
    /*  57 -  60 */ ,  57                   ,  58                   ,  59                   ,  60                   //   57 == '9'  ,  58 == ':'    ,  59 == ';'    ,  60 == '<'
    /*  61 -  64 */ ,  61                   ,  62                   ,  63                   ,  64                   //   61 == '='  ,  62 == '>'    ,  63 == '?'    ,  64 == '@'
    /*  65 -  68 */ ,  97 /* 'a' */         ,  98 /* 'b' */         ,  99 /* 'c' */         , 100 /* 'd' */         //   65 == 'A'  ,  66 == 'B'    ,  67 == 'C'    ,  68 == 'D'
    /*  69 -  72 */ , 101 /* 'e' */         , 102 /* 'f' */         , 103 /* 'g' */         , 104 /* 'h' */         //   69 == 'E'  ,  70 == 'F'    ,  71 == 'G'    ,  72 == 'H'
    /*  73 -  76 */ , 105 /* 'i' */         , 106 /* 'j' */         , 107 /* 'k' */         , 108 /* 'l' */         //   73 == 'I'  ,  74 == 'J'    ,  74 == 'K'    ,  76 == 'L'
    /*  77 -  80 */ , 109 /* 'm' */         , 110 /* 'n' */         , 111 /* 'o' */         , 112 /* 'p' */         //   77 == 'M'  ,  78 == 'N'    ,  79 == 'O'    ,  80 == 'P'
    /*  81 -  84 */ , 113 /* 'q' */         , 114 /* 'r' */         , 115 /* 's' */         , 116 /* 't' */         //   81 == 'Q'  ,  82 == 'R'    ,  83 == 'S'    ,  84 == 'T'
    /*  85 -  88 */ , 117 /* 'u' */         , 118 /* 'v' */         , 119 /* 'w' */         , 120 /* 'x' */         //   85 == 'U'  ,  86 == 'V'    ,  87 == 'W'    ,  88 == 'X'
    /*  89 -  92 */ , 121 /* 'y' */         , 122 /* 'z' */         ,  91                   ,  92                   //   89 == 'Y'  ,  90 == 'Z'    ,  91 == '['    ,  92 == '\\'
    /*  93 -  96 */ ,  93                   ,  94                   ,  95                   ,  96                   //   93 == ']'  ,  94 == '^'    ,  95 == '_'    ,  96 == '`'
    /*  97 - 100 */ ,  97 /* 'a' */         ,  98 /* 'b' */         ,  99 /* 'c' */         , 100 /* 'd' */         //   97 == 'a'  ,  98 == 'b'    ,  99 == 'c'    , 100 == 'd'
    /* 101 - 104 */ , 101 /* 'e' */         , 102 /* 'f' */         , 103 /* 'g' */         , 104 /* 'h' */         //  101 == 'e'  , 102 == 'f'    , 103 == 'g'    , 104 == 'h'
    /* 105 - 108 */ , 105 /* 'i' */         , 106 /* 'j' */         , 107 /* 'k' */         , 108 /* 'l' */         //  105 == 'i'  , 106 == 'j'    , 107 == 'k'    , 108 == 'l'
    /* 109 - 112 */ , 109 /* 'm' */         , 110 /* 'n' */         , 111 /* 'o' */         , 112 /* 'p' */         //  109 == 'm'  , 110 == 'n'    , 111 == 'o'    , 112 == 'p'
    /* 113 - 116 */ , 113 /* 'q' */         , 114 /* 'r' */         , 115 /* 's' */         , 116 /* 't' */         //  113 == 'q'  , 114 == 'r'    , 115 == 's'    , 116 == 't'
    /* 117 - 120 */ , 117 /* 'u' */         , 118 /* 'v' */         , 119 /* 'w' */         , 120 /* 'x' */         //  117 == 'u'  , 118 == 'v'    , 119 == 'w'    , 120 == 'x'
    /* 121 - 124 */ , 121 /* 'y' */         , 122 /* 'z' */         , 123                   , 124                   //  121 == 'y'  , 122 == 'z'    , 123 == '{'    , 124 == '|'
    /* 125 - 128 */ , 125                   , 126                   , 127                   , 128                   //  125 == '}'  , 126 == '~'    , 127 == DEL    , 128 == '�'
    /* 129 - 132 */ , 129                   , 130                   , 131                   , 132                   //  129         , 130 == '�'    , 131 == '�'    , 132 == '�'
    /* 133 - 136 */ , 133                   , 134                   , 135                   , 136                   //  133 == '�'  , 134 == '�'    , 135 == '�'    , 136 == '�'
    /* 137 - 140 */ , 137                   , 154 /* '�' */         , 139                   , 156 /* '�' */         //  137 == '�'  , 138 == '�'    , 139 == '�'    , 140 == '�'
    /* 141 - 144 */ , 141                   , 158 /* '�' */         , 143                   , 144                   //  141         , 142 == '�'    , 143           , 144
    /* 145 - 148 */ , 145                   , 146                   , 147                   , 148                   //  145 == '�'  , 146 == '�'    , 147 == '�'    , 148 == '�'
    /* 149 - 152 */ , 149                   , 150                   , 151                   , 152                   //  149 == '�'  , 150 == '�'    , 151 == '�'    , 152 == '�"
    /* 153 - 156 */ , 153                   , 154 /* '�' */         , 155                   , 156 /* '�' */         //  153 == '�'  , 154 == '�'    , 155 == '�'    , 156 == '�'
    /* 157 - 160 */ , 157                   , 158 /* '�' */         , 255 /* '�' */         , 160                   //  157         , 158 == '�'    , 159 == '�'    , 160 == '�'
    /* 161 - 164 */ , 161                   , 162                   , 163                   , 164                   //  161 == '�'  , 162 == '�'    , 163 == '�'    , 164 == '�'
    /* 165 - 168 */ , 165                   , 166                   , 167                   , 168                   //  165 == '�'  , 166 == '�'    , 167 == '�'    , 168 == '�'
    /* 169 - 172 */ , 169                   , 170                   , 171                   , 172                   //  169 == '�'  , 170 == '�'    , 171 == '�'    , 172 == '�'
    /* 173 - 176 */ , 173                   , 174                   , 175                   , 176                   //  173         , 174 == '�'    , 175 == '�'    , 176 == '�'
    /* 177 - 180 */ , 177                   , 178                   , 179                   , 180                   //  177 == '�'  , 178 == '�'    , 179 == '�'    , 180 == '�'
    /* 181 - 184 */ , 181                   , 182                   , 183                   , 184                   //  181 == '�'  , 182 == '�'    , 183 == '�'    , 184 == '�'
    /* 185 - 188 */ , 185                   , 186                   , 187                   , 188                   //  185 == '�'  , 186 == '�'    , 187 == '�'    , 188 == '�'
    /* 189 - 192 */ , 189                   , 190                   , 191                   , 224 /* '�' */         //  189 == '�'  , 190 == '�'    , 191 == '�'    , 192 == '�'
    /* 193 - 196 */ , 225 /* '�' */         , 226 /* '�' */         , 227 /* '�' */         , 228 /* '�' */         //  193 == '�'  , 194 == '�'    , 195 == '�'    , 196 == '�'
    /* 197 - 200 */ , 229 /* '�' */         , 230 /* '�' */         , 231 /* '�' */         , 232 /* '�' */         //  197 == '�'  , 198 == '�'    , 199 == '�'    , 200 == '�'
    /* 201 - 204 */ , 233 /* '�' */         , 234 /* '�' */         , 235 /* '�' */         , 236 /* '�' */         //  201 == '�'  , 202 == '�'    , 203 == '�'    , 204 == '�'
    /* 205 - 208 */ , 237 /* '�' */         , 238 /* '�' */         , 239 /* '�' */         , 240 /* '�' */         //  205 == '�'  , 206 == '�'    , 207 == '�'    , 208 == '�'
    /* 209 - 212 */ , 241 /* '�' */         , 242 /* '�' */         , 243 /* '�' */         , 244 /* '�' */         //  209 == '�'  , 210 == '�'    , 211 == '�'    , 212 == '�'
    /* 213 - 216 */ , 245 /* '�' */         , 246 /* '�' */         , 215                   , 248 /* '�' */         //  213 == '�'  , 214 == '�'    , 215 == '�'    , 216 == '�'
    /* 217 - 220 */ , 249 /* '�' */         , 250 /* '�' */         , 251 /* '�' */         , 252 /* '�' */         //  217 == '�'  , 218 == '�'    , 219 == '�'    , 220 == '�'
    /* 221 - 224 */ , 253 /* '�' */         , 254 /* '�' */         , 223 /* '�' */         , 224 /* '�' */         //  221 == '�'  , 222 == '�'    , 223 == '�'    , 224 == '�'
    /* 225 - 228 */ , 225 /* '�' */         , 226 /* '�' */         , 227 /* '�' */         , 228 /* '�' */         //  225 == '�'  , 226 == '�'    , 227 == '�'    , 228 == '�'
    /* 229 - 232 */ , 229 /* '�' */         , 230 /* '�' */         , 231 /* '�' */         , 232 /* '�' */         //  229 == '�'  , 230 == '�'    , 231 == '�'    , 232 == '�'
    /* 233 - 236 */ , 233 /* '�' */         , 234 /* '�' */         , 235 /* '�' */         , 236 /* '�' */         //  233 == '�'  , 234 == '�'    , 235 == '�'    , 236 == '�'
    /* 237 - 240 */ , 237 /* '�' */         , 238 /* '�' */         , 239 /* '�' */         , 240 /* '�' */         //  237 == '�'  , 238 == '�'    , 239 == '�'    , 240 == '�'
    /* 241 - 244 */ , 241 /* '�' */         , 242 /* '�' */         , 243 /* '�' */         , 244 /* '�' */         //  241 == '�'  , 242 == '�'    , 243 == '�'    , 244 == '�'
    /* 245 - 248 */ , 245 /* '�' */         , 246 /* '�' */         , 247                   , 248 /* '�' */         //  245 == '�'  , 246 == '�'    , 247 == '�'    , 248 == '�'
    /* 249 - 252 */ , 249 /* '�' */         , 250 /* '�' */         , 251 /* '�' */         , 252 /* '�' */         //  249 == '�'  , 250 == '�'    , 251 == '�'    , 252 == '�'
    /* 253 - 255 */ , 253 /* '�' */         , 254 /* '�' */         , 255 /* '�' */                                 //  253 == '�'  , 254 == '�'    , 255 == '�'
};

// ISO 8859-1
static constexpr unsigned char  ASCII_ISO8859_1_Table_upper[]  =
{
    /*   0 -   0 */     0                                                                                           //   '\0', end of string
    /*   1 -   4 */ ,   1                   ,   2                   ,   3                   ,   4                   //    1 == SOH  ,   2 == STX    ,   3 == ETX    ,   4 == EOT
    /*   5 -   8 */ ,   5                   ,   6                   ,   7                   ,   8                   //    5 == ENQ  ,   6 == ACK    ,   7 == BEL    ,   8 == '\b'
    /*   9 -  12 */ ,   9                   ,  10                   ,  11                   ,  12                   //    9 == '\t' ,  10 == '\n'   ,  11 == '\v'   ,  12 == '\f'
    /*  13 -  16 */ ,  13                   ,  14                   ,  15                   ,  16                   //   13 == '\r' ,  14 == SO     ,  15 == SI     ,  16 == DLE
    /*  17 -  20 */ ,  17                   ,  18                   ,  19                   ,  20                   //   17 == DC1  ,  18 == DC2    ,  19 == DC3    ,  20 == DC4
    /*  21 -  24 */ ,  21                   ,  22                   ,  23                   ,  24                   //   21 == NAK  ,  22 == SYN    ,  23 == ETB    ,  24 == CAN
    /*  25 -  28 */ ,  25                   ,  26                   ,  27                   ,  28                   //   25 == EM   ,  26 == SUB    ,  27 == ESC    ,  28 == FS
    /*  29 -  32 */ ,  29                   ,  30                   ,  31                   ,  32                   //   29 == GS   ,  30 == RS     ,  31 == US     ,  32 == ' '
    /*  33 -  36 */ ,  33                   ,  34                   ,  35                   ,  36                   //   33 == '!'  ,  34 == '\"'   ,  35 == '#'    ,  36 == '$'
    /*  37 -  40 */ ,  37                   ,  38                   ,  39                   ,  40                   //   37 == '%'  ,  38 == '&'    ,  39 == '\''   ,  40 == '('
    /*  41 -  44 */ ,  41                   ,  42                   ,  43                   ,  44                   //   41 == ')'  ,  42 == '*'    ,  43 == '+'    ,  44 == ','
    /*  45 -  48 */ ,  45                   ,  46                   ,  47                   ,  48                   //   45 == '-'  ,  46 == '.'    ,  47 == '/'    ,  48 == '0'
    /*  49 -  52 */ ,  49                   ,  50                   ,  51                   ,  52                   //   49 == '1'  ,  50 == '2'    ,  51 == '3'    ,  52 == '4'
    /*  53 -  56 */ ,  53                   ,  54                   ,  55                   ,  56                   //   53 == '5'  ,  54 == '6'    ,  55 == '7'    ,  56 == '8'
    /*  57 -  60 */ ,  57                   ,  58                   ,  59                   ,  60                   //   57 == '9'  ,  58 == ':'    ,  59 == ';'    ,  60 == '<'
    /*  61 -  64 */ ,  61                   ,  62                   ,  63                   ,  64                   //   61 == '='  ,  62 == '>'    ,  63 == '?'    ,  64 == '@'
    /*  65 -  68 */ ,  65 /* 'A' */         ,  66 /* 'B' */         ,  67 /* 'C' */         ,  68 /* 'D' */         //   65 == 'A'  ,  66 == 'B'    ,  67 == 'C'    ,  68 == 'D'
    /*  69 -  72 */ ,  69 /* 'E' */         ,  70 /* 'F' */         ,  71 /* 'G' */         ,  72 /* 'H' */         //   69 == 'E'  ,  70 == 'F'    ,  71 == 'G'    ,  72 == 'H'
    /*  73 -  76 */ ,  73 /* 'I' */         ,  74 /* 'J' */         ,  75 /* 'K' */         ,  76 /* 'L' */         //   73 == 'I'  ,  74 == 'J'    ,  74 == 'K'    ,  76 == 'L'
    /*  77 -  80 */ ,  77 /* 'M' */         ,  78 /* 'N' */         ,  79 /* 'O' */         ,  80 /* 'P' */         //   77 == 'M'  ,  78 == 'N'    ,  79 == 'O'    ,  80 == 'P'
    /*  81 -  84 */ ,  81 /* 'Q' */         ,  82 /* 'R' */         ,  83 /* 'S' */         ,  84 /* 'T' */         //   81 == 'Q'  ,  82 == 'R'    ,  83 == 'S'    ,  84 == 'T'
    /*  85 -  88 */ ,  85 /* 'U' */         ,  86 /* 'V' */         ,  87 /* 'W' */         ,  88 /* 'X' */         //   85 == 'U'  ,  86 == 'V'    ,  87 == 'W'    ,  88 == 'X'
    /*  89 -  92 */ ,  89 /* 'Y' */         ,  90 /* 'Z' */         ,  91                   ,  92                   //   89 == 'Y'  ,  90 == 'Z'    ,  91 == '['    ,  92 == '\\'
    /*  93 -  96 */ ,  93                   ,  94                   ,  95                   ,  96                   //   93 == ']'  ,  94 == '^'    ,  95 == '_'    ,  96 == '`'
    /*  97 - 100 */ ,  65 /* 'A' */         ,  66 /* 'B' */         ,  67 /* 'C' */         ,  68 /* 'D' */         //   97 == 'a'  ,  98 == 'b'    ,  99 == 'c'    , 100 == 'd'
    /* 101 - 104 */ ,  69 /* 'E' */         ,  70 /* 'F' */         ,  71 /* 'G' */         ,  72 /* 'H' */         //  101 == 'e'  , 102 == 'f'    , 103 == 'g'    , 104 == 'h'
    /* 105 - 108 */ ,  73 /* 'I' */         ,  74 /* 'J' */         ,  75 /* 'K' */         ,  76 /* 'L' */         //  105 == 'i'  , 106 == 'j'    , 107 == 'k'    , 108 == 'l'
    /* 109 - 112 */ ,  77 /* 'M' */         ,  78 /* 'N' */         ,  79 /* 'O' */         ,  80 /* 'P' */         //  109 == 'm'  , 110 == 'n'    , 111 == 'o'    , 112 == 'p'
    /* 113 - 116 */ ,  81 /* 'Q' */         ,  82 /* 'R' */         ,  83 /* 'S' */         ,  84 /* 'T' */         //  113 == 'q'  , 114 == 'r'    , 115 == 's'    , 116 == 't'
    /* 117 - 120 */ ,  85 /* 'U' */         ,  86 /* 'V' */         ,  87 /* 'W' */         ,  88 /* 'X' */         //  117 == 'u'  , 118 == 'v'    , 119 == 'w'    , 120 == 'x'
    /* 121 - 124 */ ,  89 /* 'Y' */         ,  90 /* 'Z' */         , 123                   , 124                   //  121 == 'y'  , 122 == 'z'    , 123 == '{'    , 124 == '|'
    /* 125 - 128 */ , 125                   , 126                   , 127                   , 128                   //  125 == '}'  , 126 == '~'    , 127 == DEL    , 128 == '�'
    /* 129 - 132 */ , 129                   , 130                   , 131                   , 132                   //  129         , 130 == '�'    , 131 == '�'    , 132 == '�'
    /* 133 - 136 */ , 133                   , 134                   , 135                   , 136                   //  133 == '�'  , 134 == '�'    , 135 == '�'    , 136 == '�'
    /* 137 - 140 */ , 137                   , 138 /* '�' */         , 139                   , 140 /* '�' */         //  137 == '�'  , 138 == '�'    , 139 == '�'    , 140 == '�'
    /* 141 - 144 */ , 141                   , 142 /* '�' */         , 143                   , 144                   //  141         , 142 == '�'    , 143           , 144
    /* 145 - 148 */ , 145                   , 146                   , 147                   , 148                   //  145 == '�'  , 146 == '�'    , 147 == '�'    , 148 == '�'
    /* 149 - 152 */ , 149                   , 150                   , 151                   , 152                   //  149 == '�'  , 150 == '�'    , 151 == '�'    , 152 == '�"
    /* 153 - 156 */ , 153                   , 138 /* '�' */         , 155                   , 140 /* '�' */         //  153 == '�'  , 154 == '�'    , 155 == '�'    , 156 == '�'
    /* 157 - 160 */ , 157                   , 142 /* '�' */         , 159 /* '�' */         , 160                   //  157         , 158 == '�'    , 159 == '�'    , 160 == '�'
    /* 161 - 164 */ , 161                   , 162                   , 163                   , 164                   //  161 == '�'  , 162 == '�'    , 163 == '�'    , 164 == '�'
    /* 165 - 168 */ , 165                   , 166                   , 167                   , 168                   //  165 == '�'  , 166 == '�'    , 167 == '�'    , 168 == '�'
    /* 169 - 172 */ , 169                   , 170                   , 171                   , 172                   //  169 == '�'  , 170 == '�'    , 171 == '�'    , 172 == '�'
    /* 173 - 176 */ , 173                   , 174                   , 175                   , 176                   //  173         , 174 == '�'    , 175 == '�'    , 176 == '�'
    /* 177 - 180 */ , 177                   , 178                   , 179                   , 180                   //  177 == '�'  , 178 == '�'    , 179 == '�'    , 180 == '�'
    /* 181 - 184 */ , 181                   , 182                   , 183                   , 184                   //  181 == '�'  , 182 == '�'    , 183 == '�'    , 184 == '�'
    /* 185 - 188 */ , 185                   , 186                   , 187                   , 188                   //  185 == '�'  , 186 == '�'    , 187 == '�'    , 188 == '�'
    /* 189 - 192 */ , 189                   , 190                   , 191                   , 192 /* '�' */         //  189 == '�'  , 190 == '�'    , 191 == '�'    , 192 == '�'
    /* 193 - 196 */ , 193 /* '�' */         , 194 /* '�' */         , 195 /* '�' */         , 196 /* '�' */         //  193 == '�'  , 194 == '�'    , 195 == '�'    , 196 == '�'
    /* 197 - 200 */ , 197 /* '�' */         , 198 /* '�' */         , 199 /* '�' */         , 200 /* '�' */         //  197 == '�'  , 198 == '�'    , 199 == '�'    , 200 == '�'
    /* 201 - 204 */ , 201 /* '�' */         , 202 /* '�' */         , 203 /* '�' */         , 204 /* '�' */         //  201 == '�'  , 202 == '�'    , 203 == '�'    , 204 == '�'
    /* 205 - 208 */ , 205 /* '�' */         , 206 /* '�' */         , 207 /* '�' */         , 208 /* '�' */         //  205 == '�'  , 206 == '�'    , 207 == '�'    , 208 == '�'
    /* 209 - 212 */ , 209 /* '�' */         , 210 /* '�' */         , 211 /* '�' */         , 212 /* '�' */         //  209 == '�'  , 210 == '�'    , 211 == '�'    , 212 == '�'
    /* 213 - 216 */ , 213 /* '�' */         , 214 /* '�' */         , 215                   , 216 /* '�' */         //  213 == '�'  , 214 == '�'    , 215 == '�'    , 216 == '�'
    /* 217 - 220 */ , 217 /* '�' */         , 218 /* '�' */         , 219 /* '�' */         , 220 /* '�' */         //  217 == '�'  , 218 == '�'    , 219 == '�'    , 220 == '�'
    /* 221 - 224 */ , 221 /* '�' */         , 222 /* '�' */         , 223 /* '�' */         , 192 /* '�' */         //  221 == '�'  , 222 == '�'    , 223 == '�'    , 224 == '�'
    /* 225 - 228 */ , 193 /* '�' */         , 194 /* '�' */         , 195 /* '�' */         , 196 /* '�' */         //  225 == '�'  , 226 == '�'    , 227 == '�'    , 228 == '�'
    /* 229 - 232 */ , 197 /* '�' */         , 198 /* '�' */         , 199 /* '�' */         , 200 /* '�' */         //  229 == '�'  , 230 == '�'    , 231 == '�'    , 232 == '�'
    /* 233 - 236 */ , 201 /* '�' */         , 202 /* '�' */         , 203 /* '�' */         , 204 /* '�' */         //  233 == '�'  , 234 == '�'    , 235 == '�'    , 236 == '�'
    /* 237 - 240 */ , 205 /* '�' */         , 206 /* '�' */         , 207 /* '�' */         , 208 /* '�' */         //  237 == '�'  , 238 == '�'    , 239 == '�'    , 240 == '�'
    /* 241 - 244 */ , 209 /* '�' */         , 210 /* '�' */         , 211 /* '�' */         , 212 /* '�' */         //  241 == '�'  , 242 == '�'    , 243 == '�'    , 244 == '�'
    /* 245 - 248 */ , 213 /* '�' */         , 214 /* '�' */         , 247                   , 216 /* '�' */         //  245 == '�'  , 246 == '�'    , 247 == '�'    , 248 == '�'
    /* 249 - 252 */ , 217 /* '�' */         , 218 /* '�' */         , 219 /* '�' */         , 220 /* '�' */         //  249 == '�'  , 250 == '�'    , 251 == '�'    , 252 == '�'
    /* 253 - 255 */ , 221 /* '�' */         , 222 /* '�' */         , 159 /* '�' */                                 //  253 == '�'  , 254 == '�'    , 255 == '�'
};

/************************************************************************/
// NEString namespace global method implementation
/************************************************************************/

AREG_API_IMPL unsigned short NEString::getISO8859CharDef( int ch )
{
    return (ch >= -128 && ch <= 127 ? ASCII_ISO8859_1_Table[static_cast<unsigned char>(ch & 0xFF)] : DUMMY);
}

AREG_API_IMPL unsigned int NEString::getISO8859LowerChar( int ch )
{
    return (ch >= -128 && ch <= 127 ? static_cast<unsigned int>(ASCII_ISO8859_1_Table_lower[static_cast<unsigned char>(ch & 0xFF)]) : static_cast<unsigned int>(ch));
}

AREG_API_IMPL unsigned int NEString::getISO8859UpperChar( int ch )
{
    return (ch >= -128 && ch <= 127 ? static_cast<unsigned int>(ASCII_ISO8859_1_Table_upper[static_cast<unsigned char>(ch & 0xFF)]) : static_cast<unsigned int>(ch));
}
