
//////////////////////////////////////////////////////////////////////////
// Begin generate NETrafficLightFSM.hpp file
//////////////////////////////////////////////////////////////////////////

#ifndef  GENERATED_SRC_PRIVATE_NETRAFFICLIGHTFSM_HPP
#define  GENERATED_SRC_PRIVATE_NETRAFFICLIGHTFSM_HPP

/************************************************************************
 * (c) copyright    2021
 *                  Generated by Aregtech code generator tool.
 * Generated at     16.08.2021  12:45:39 GMT+02:00 
 ************************************************************************/

/************************************************************************
 * \file            generated/src/private/NETrafficLightFSM.hpp
 * \ingroup         TrafficLight State Machine
 * \brief           This is an automatic generated code of TrafficLight namespace.
 ************************************************************************/

/************************************************************************
 * Include files
 ************************************************************************/

#include "areg/component/TEEvent.hpp"

//////////////////////////////////////////////////////////////////////////
// NETrafficLightFSM Namespace Declaration 
//////////////////////////////////////////////////////////////////////////
/**
 * \brief   NETrafficLightFSM namespace is used to declare
 *          predefined Constants, Types, Structures, Events and Timers
 *          of TrafficLight State Machine.
 **/
namespace NETrafficLightFSM
{

//////////////////////////////////////////////////////////////////////////
// Predefined constants of TrafficLight State Machine
//////////////////////////////////////////////////////////////////////////
    /**
     * \brief   NETrafficLightFSM::InstanceDefaultName
     *          The default name of TrafficLight State Machine instance.
     **/
    const char* const   InstanceDefaultName     = "TrafficLight";
    
//////////////////////////////////////////////////////////////////////////
// Available predefined events of TrafficLight State Machine
//////////////////////////////////////////////////////////////////////////
    /**
     * \brief   NETrafficLightFSM::eFsmEventValue
     *          TrafficLight State Machine available Event IDs
     **/
    enum class eFsmEventValue
    {
        EVENT_StartTrafficLight /** DESCRIPTION MISSED **/

    };
   
    /**
     * \brief   Returns human readable string of NETrafficLightFSM::eFsmEventValue event values
     **/
    const char* const getString( const NETrafficLightFSM::eFsmEventValue & eventValue );

    //////////////////////////////////////////////////////////////////////////
    // NETrafficLightFSM::FsmEventData class declaration
    //////////////////////////////////////////////////////////////////////////
    /************************************************************************
     * \brief   This is predefined Event Data class containing Event ID.
     *          When Event is triggered in State Machine, depending on
     *          Event ID, the appropriate processing method will be fired.
     ************************************************************************/
    class FsmEventData
    {
    //////////////////////////////////////////////////////////////////////////
    // Constructors / Destructor
    //////////////////////////////////////////////////////////////////////////
    public:
        FsmEventData( const NETrafficLightFSM::eFsmEventValue & eventValue )
            : mEventValue( eventValue )
        {   ;   }

        FsmEventData( const FsmEventData & data )
            : mEventValue( data.mEventValue )
        {   ;   }

        ~FsmEventData( void )
        {   ;   }
   
    //////////////////////////////////////////////////////////////////////////
    // Attributes and operators
    //////////////////////////////////////////////////////////////////////////
    public:
        /**
         * \brief   Returns event data value.
         **/
        inline const NETrafficLightFSM::eFsmEventValue & getValue( void ) const
        {
            return mEventValue;
        }

    //////////////////////////////////////////////////////////////////////////
    // Member variable
    //////////////////////////////////////////////////////////////////////////
    public:
        /**
         * \brief   The Event Value
         **/
        const NETrafficLightFSM::eFsmEventValue  mEventValue;

    //////////////////////////////////////////////////////////////////////////
    // Hidden / Forbidden methods
    //////////////////////////////////////////////////////////////////////////
    private:
        FsmEventData( void );
        const NETrafficLightFSM::FsmEventData & operator = ( const NETrafficLightFSM::FsmEventData & src );
   };
   
//////////////////////////////////////////////////////////////////////////
// Declare FSM Event and Event Consumer classes
//////////////////////////////////////////////////////////////////////////
/**
 * \brief   Declaration of NETrafficLightFSM::FsmEvent of internal type
 *          and declarataion of NETrafficLightFSM::IEFsmEventConsumer, which
 *          will be registered in the same thread, where it is instantiated.
 **/
DECLARE_INTERNAL_EVENT(FsmEventData, FsmEvent, IEFsmEventConsumer);

//////////////////////////////////////////////////////////////////////////
// Available predefined Timers of TrafficLight State Machine
//////////////////////////////////////////////////////////////////////////

    /**
     * \brief   NETrafficLightFSM::eFsmEventValue
                TrafficLight State Machine available Timer IDs
     *          
     **/
    typedef enum E_FsmTimerValue
    {
        Red            /** DESCRIPTION MISSED **/
      , YellowRed      /** DESCRIPTION MISSED **/
      , Green          /** DESCRIPTION MISSED **/
      , YellowGreen    /** DESCRIPTION MISSED **/
      , PedestrianWalk /** DESCRIPTION MISSED **/
      , VehicleWait    /** DESCRIPTION MISSED **/   
    } eFsmTimerValue;
   
    /**
     * \brief   Returns human readable string of NETrafficLightFSM::eFsmEventValue timer values
     **/
    const char* const getString( const NETrafficLightFSM::eFsmTimerValue & timerValue );

};

#endif  // GENERATED_SRC_PRIVATE_NETRAFFICLIGHTFSM_HPP

//////////////////////////////////////////////////////////////////////////
// End generate NETrafficLightFSM.hpp file
//////////////////////////////////////////////////////////////////////////
