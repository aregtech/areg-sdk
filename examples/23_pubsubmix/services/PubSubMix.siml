<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<ServiceInterface FormatVersion="1.1.0">
    <Overview ID="1" Name="PubSubMix" Version="1.1.0" Category="Public">
        <Description>This is an interface to test the PubSub features (data-driven communication) of the
AREG framework, where each service provider is a Publisher and each service consumer is a Subscriber that dynamically
subscribes on data update and get notified. The agenda of this example to demonstrate mixture of Publishers and Subscribers
and testing the correct behavior of notifications when Subscribers run in the same or different processes.
</Description>
    </Overview>
    <DataTypeList>
        <DataType ID="8" Name="eServiceState" Type="Enumeration" Values="default">
            <Description>The state of the Publisher (service provider)</Description>
            <FieldList>
                <EnumEntry ID="9" Name="Uninitialized">
                    <Value></Value>
                    <Description>The service provider state is initialized. The values are in invalid states.</Description>
                </EnumEntry>
                <EnumEntry ID="10" Name="Stopped">
                    <Value></Value>
                    <Description>The service provider state is stopped, values are initialized and valid.</Description>
                </EnumEntry>
                <EnumEntry ID="11" Name="Running">
                    <Value></Value>
                    <Description>The service provider state is running, the values should change values.</Description>
                </EnumEntry>
                <EnumEntry ID="17" Name="Shutdown">
                    <Value></Value>
                    <Description>The service provider shuts down and quits.</Description>
                </EnumEntry>
            </FieldList>
        </DataType>
        <DataType ID="18" Name="sInteger" Type="Structure">
            <Description>The named structure for integer, 
which contains integer as a value and name of a service, which updates the value.</Description>
            <FieldList>
                <Field ID="19" Name="value" DataType="uint32">
                    <Value>0</Value>
                    <Description>The integer value.</Description>
                </Field>
                <Field ID="20" Name="name" DataType="String">
                    <Value></Value>
                    <Description>The name of the service that updated value.</Description>
                </Field>
            </FieldList>
        </DataType>
        <DataType ID="21" Name="sString" Type="Structure">
            <Description>The named structure for string, 
which contains string as a value and name of a service, which updates the value.</Description>
            <FieldList>
                <Field ID="22" Name="value" DataType="String">
                    <Value></Value>
                    <Description>The value</Description>
                </Field>
                <Field ID="23" Name="name" DataType="String">
                    <Value></Value>
                    <Description>The name of the service that updated value.</Description>
                </Field>
            </FieldList>
        </DataType>
    </DataTypeList>
    <AttributeList>
        <Attribute ID="3" Name="StringOnChange" DataType="sString" Notify="OnChange">
            <Description>This string should send update notification only on change.</Description>
        </Attribute>
        <Attribute ID="4" Name="IntegerAlways" DataType="sInteger" Notify="Always">
            <Description>This  integer should send update notification always when set.</Description>
        </Attribute>
        <Attribute ID="12" Name="ServiceProviderState" DataType="eServiceState" Notify="OnChange">
            <Description>The state of service provider. The value is always valid, updated on change.</Description>
        </Attribute>
    </AttributeList>
    <ConstantList>
        <Constant ID="14" DataType="uint32" Name="TimeoutOnChange">
            <Value>150</Value>
            <Description>The timeout to make updates on change</Description>
        </Constant>
        <Constant ID="15" DataType="uint32" Name="TimeoutAlways">
            <Value>300</Value>
            <Description>The timeout to update on always.</Description>
        </Constant>
        <Constant ID="16" DataType="uint16" Name="CycleAlways">
            <Value>3</Value>
            <Description>The number of cycles to change the value when updating values.</Description>
        </Constant>
    </ConstantList>
</ServiceInterface>