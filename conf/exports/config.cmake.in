@PACKAGE_INIT@
include(CMakeFindDependencyMacro)

# ##################################################
# Set AREG SDK essentials
# ##################################################

# Root folder of the SDK
set(AREG_SDK_ROOT           "@CMAKE_INSTALL_PREFIX@")
# Location of 'areg', 'aregextend' and 'areglogger' header files
set(AREG_BASE               "@CMAKE_INSTALL_FULL_INCLUDEDIR@")
# Location of configuration, initialization and other shared files of AREG SDK
set(AREG_SHARE_DIR          "@CMAKE_INSTALL_PREFIX@/share/@AREG_PACKAGE_NAME@")
# Location of initialization file to copy as a template in the processes
set(AREG_SHARE_INIT         "${AREG_SHARE_DIR}/areg.init")
# Location of cmake configuration directory
set(AREG_CMAKE_CONFIG_DIR   "${AREG_SHARE_DIR}/conf/cmake")
# Location of AREG SDK tools.
set(AREG_SDK_TOOLS          "@CMAKE_INSTALL_PREFIX@/tools/@AREG_PACKAGE_NAME@")
# Location of the AREG SDK code generator
set(AREG_TOOL_CODEGEN       "${AREG_SDK_TOOLS}/codegen.jar")

# The build type of AREG libraries.
set(AREG_BUILD_TYPE         "@AREG_BUILD_TYPE@")
# The library type of 'areg'. Static or dynamic
set(AREG_BINARY             "@AREG_BINARY@")
# The library type of 'areglogger'. Static or dynamic.
set(AREG_LOGGER_LIB         "@AREG_LOGGER_LIB@")

# Specify whether 'aregextend' is compiled with enabled extended objects flag
option(AREG_EXTENDED        "AREG Extended object flag"         @AREG_EXTENDED@)
# Specify whether the libraries where compiled with enabled logging.
option(AREG_LOGS            "AREG logging enable flag"          @AREG_LOGS@)

# include the exported targets
include("${CMAKE_CURRENT_LIST_DIR}/@AREG_PACKAGE_NAME@-targets.cmake")
check_required_components("@AREG_PACKAGE_NAME@")

# Unit tests are ignored
option(AREG_BUILD_TESTS     "No AREG Unit Tests"    OFF)
# Examples are ignored
option(AREG_BUILD_EXAMPLES  "No AREG Examples"      OFF)

# Change the build root directory if compiled fines are copied somewhere else.
# set to 'CMAKE_CURRENT_BINARY_DIR' if it should be in the compiled binaries directory
set(AREG_BUILD_ROOT         "${CMAKE_SOURCE_DIR}/product")


# Add '${AREG_BASE}' path in the includes
include_directories(${AREG_BASE})
# Pass the path to the shared 'areg.init' file to the source codes.
add_definitions(-DAREG_SHARE_INIT="${AREG_SHARE_INIT}")
