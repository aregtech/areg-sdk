@PACKAGE_INIT@
include(CMakeFindDependencyMacro)

set(AREG_SDK_ROOT           "@CMAKE_INSTALL_PREFIX@")
set(AREG_BASE               "@CMAKE_INSTALL_FULL_INCLUDEDIR@")
set(AREG_SHARE              "@CMAKE_INSTALL_PREFIX@/share/@AREG_PACKAGE_NAME@)
set(AREG_SHARE_INIT         "${AREG_SHARE}/areg.init")
set(AREG_CMAKE_CONFIG_DIR   "${AREG_SHARE}/conf/cmake")
set(AREG_SDK_TOOLS          "@CMAKE_INSTALL_PREFIX@/tools/@AREG_PACKAGE_NAME@")
set(AREG_SDK)

set(AREG_BUILD_TYPE         "@AREG_BUILD_TYPE@")
set(AREG_BINARY             "@AREG_BINARY@")
set(AREG_LOGGER_LIB         "@AREG_LOGGER_LIB@")

option(AREG_EXTENDED        "AREG Extended object flag"         @AREG_EXTENDED@)
option(AREG_LOGS            "AREG logging enable flag"          @AREG_LOGS@)
option(AREG_SQLITE_PACKAGE  "AREG compiled with SQLite package" @AREG_SQLITE_PACKAGE@)

include("${CMAKE_CURRENT_LIST_DIR}/@AREG_PACKAGE_NAME@-targets.cmake")
check_required_components("@AREG_PACKAGE_NAME@")

option(AREG_BUILD_TESTS     "No AREG Unit Tests"    OFF)
option(AREG_BUILD_EXAMPLES  "No AREG Examples"      OFF)

# Change the build root directory if compiled fines are copied somewhere else.
# set to 'CMAKE_CURRENT_BINARY_DIR' if it should be in the compiled binaries directory
set(AREG_BUILD_ROOT         "${CMAKE_SOURCE_DIR}/product")

# Change the generated directory if the output should be somewhere else
# set, for example, to 'CMAKE_BINARY_DIR' if the generated files should be in the compiled object directory
set(AREG_GENERATE           "${AREG_BUILD_ROOT}/generate")

# Add '${AREG_BASE}' path in the includes
include_directories(${AREG_BASE})
# Pass the path to the shared 'areg.init' file to the source codes.
add_definitions(-DAREG_SHARE_INIT="${AREG_SHARE_INIT}")
